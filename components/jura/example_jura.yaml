api:
  encryption:
    key: !secret api_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Enable fallback hotspot in case of WiFi issues
  ap:
    ssid: "${friendly_name} Fallback Hotspot"
    password: !secret fallback_password

substitutions:
  devicename: jura_coffee
  friendly_name: Coffee Machine
  device_description: Jura Coffee Machine in Kitchen
  device_icon: mdi:coffee

# Globals are still needed for your button logic that handles screen/tab state
globals:
-   id: current_tab
    type: int
    restore_value: no
    initial_value: '1'
-   id: saved_tab
    type: int
    restore_value: no
    initial_value: '1'
-   id: current_screen
    type: std::string
    restore_value: no
    initial_value: '"Menu"'

esphome:
  name: ${devicename}
  friendly_name: ${friendly_name}
  comment: ${device_description}

# This tells ESPHome where to find your custom component files.
# It looks for the 'jura' folder you created in the same directory as this yaml file.
external_components:
  - source:
      type: local
      path: jura

# Your standard device configuration
esp32:
  board: esp32dev
  framework:
    type: esp-idf

# Enhanced logging configuration for debugging
logger:
  # Set to DEBUG for normal operation, VERBOSE for troubleshooting
  level: DEBUG
  logs:
    # Uncomment the line below for detailed component debugging
    # jura: VERBOSE
captive_portal:

# Optional BLE tracker and Bluetooth proxy
esp32_ble_tracker:
  scan_parameters:
    interval: 1100ms
    window: 1100ms
    active: true

bluetooth_proxy:
  active: true

# Status LED (optional)
status_led:
  pin:
    number: GPIO2
    inverted: False

# The UART bus for communication with the Jura machine
uart:
  tx_pin: GPIO17
  rx_pin: GPIO16
  baud_rate: 9600
  id: uart_bus

# Enhanced Jura component configuration with all sensors and improved settings
jura:
  uart_id: uart_bus
  update_interval: 60s
  timeout_ms: 5000  # 5 second timeout for communication
  
  # Coffee counter sensors
  single_espresso:
    id: num_single_espresso
    name: "Single Espressos Made"
    device_class: ""
    state_class: "total_increasing"
  double_espresso:
    id: num_double_espresso
    name: "Double Espressos Made"
    device_class: ""
    state_class: "total_increasing"
  coffee:
    id: num_coffee
    name: "Coffees Made"
    device_class: ""
    state_class: "total_increasing"
  double_coffee:
    id: num_double_coffee
    name: "Double Coffees Made"
    device_class: ""
    state_class: "total_increasing"
  cleanings:
    id: num_clean
    name: "Cleanings Performed"
    device_class: ""
    state_class: "total_increasing"
    
  # Status sensors
  tray_status:
    id: tray_status
    name: "Drip Tray Status"
  tank_status:
    id: tank_status
    name: "Water Tank Status"

# Machine power control
switch:
  - platform: template
    name: 'Coffee Machine Power'
    icon: "mdi:coffee-maker"
    id: jura_on_off_switch
    device_class: switch
    turn_on_action:
      - uart.write: [0xDF, 0xDB, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xFB, 0xFF, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDB, 0xDB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xDB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xFF, 0xDB, 0xDB]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xDB, 0xDB]
    turn_off_action:
      - uart.write: [0xFB, 0xDF, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xDF, 0xDB, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDB, 0xDB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xDB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xFF, 0xDB, 0xDB]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xDB, 0xDB]
    optimistic: true
    assumed_state: true

# Virtual buttons for machine control and navigation
button:
  - platform: template
    name: 'Single Espresso'
    icon: "mdi:coffee"
    id: jura_button_4
    on_press:
      - uart.write: [0xFB, 0xDF, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xDF, 0xDB, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDB, 0xDB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDB, 0xDF, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xFF, 0xDB, 0xDB]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xDB, 0xDB]

  - platform: template
    name: 'Double Espresso'
    icon: "mdi:coffee-outline"
    id: jura_button_5
    on_press:
      - uart.write: [0xFB, 0xDF, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xDF, 0xDB, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDB, 0xDB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xDF, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xFF, 0xDB, 0xDB]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xDB, 0xDB]

  - platform: template
    name: 'Menu/Back Button'
    icon: "mdi:backburger"
    id: jura_button_6
    on_press:
      - uart.write: [0xFB, 0xDF, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xDF, 0xDB, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDB, 0xDB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xFB, 0xDF, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xFF, 0xDB, 0xDB]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xDB, 0xDB]
      - delay: 8ms
      - lambda: |-
          if (id(current_screen) == "Options") {
            id(current_screen) = "Menu";
            id(current_tab) = id(saved_tab);
          } else if (id(current_screen) == "Menu") {
            id(current_screen) = "Options";
            id(saved_tab) = id(current_tab);
            id(current_tab) = 1;
          }
      - lambda: 'id(display_current).update();'

  - platform: template
    name: 'Coffee'
    icon: "mdi:coffee-maker"
    id: jura_button_7
    on_press:
      - uart.write: [0xFB, 0xDF, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xDF, 0xDB, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDB, 0xDB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xFF, 0xDF, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xFF, 0xDB, 0xDB]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xDB, 0xDB]

  - platform: template
    name: 'Double Coffee'
    icon: "mdi:coffee-maker-outline"
    id: jura_button_8
    on_press:
      - uart.write: [0xFB, 0xDF, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xDF, 0xDB, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDB, 0xDB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDB, 0xFB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xFF, 0xDB, 0xDB]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xDB, 0xDB]

  - platform: template
    name: 'Next Button'
    icon: "mdi:chevron-right"
    id: jura_button_9
    on_press:
      - uart.write: [0xFB, 0xDF, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xDF, 0xDB, 0xDB, 0xDF]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDB, 0xDB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xFB, 0xFF, 0xDB]
      - delay: 8ms
      - uart.write: [0xDF, 0xFF, 0xDB, 0xDB]
      - delay: 8ms
      - uart.write: [0xFB, 0xFB, 0xDB, 0xDB]
      - delay: 8ms
      - lambda: |-
          if (id(current_screen) == "Options") {
            if (id(current_tab) < 5) {
              id(current_tab) += 1;
            } else {
              id(current_tab) = 1;
            }
          }
          else if (id(current_screen) == "Menu") {
            if (id(current_tab) < 2) {
              id(current_tab) += 1;
            } else {
              id(current_tab) = 1;
            }
          }
      - lambda: 'id(display_current).update();'

  # Debug/Test button for raw communication testing
  - platform: template
    name: 'Test Communication'
    icon: "mdi:test-tube"
    id: test_button
    on_press:
      - logger.log: "Testing Jura communication..."
      - uart.write: "RT:0000\r\n"

# Standard system sensors
sensor:
  - platform: uptime
    name: "${friendly_name} Uptime"
    device_class: duration
    state_class: "total_increasing"
    entity_category: diagnostic
    
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s
    entity_category: diagnostic

  # Template sensor for total daily coffee consumption
  - platform: template
    name: "Total Coffees Made Today"
    icon: "mdi:counter"
    lambda: |-
      return id(num_single_espresso).state + 
             id(num_double_espresso).state + 
             id(num_coffee).state + 
             id(num_double_coffee).state;
    update_interval: 60s

# Text sensors for system information and display state
text_sensor:
  - platform: version
    name: "${friendly_name} ESPHome Version"
    entity_category: diagnostic
    
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP Address"
      entity_category: diagnostic
    ssid:
      name: "${friendly_name} Connected SSID"
      entity_category: diagnostic

  # Enhanced display current sensor with improved error handling
  - platform: template
    id: display_current
    name: "Current Display"
    icon: "mdi:monitor"
    lambda: |-
      // Check for error conditions first
      if (!id(tank_status).has_state() || !id(tray_status).has_state()) {
        return {"Initializing..."};
      }
      
      std::string tank = id(tank_status).state;
      std::string tray = id(tray_status).state;
      
      // Priority: Tank and tray issues override normal display
      if (tank != "OK") {
        return {"Fill_Tank"}; 
      } else if (tray != "OK") {
        return {"Tray_Not_Fitted"};
      } else {
        // Normal display state
        return id(current_screen) + " " + std::to_string(id(current_tab));
      }
    update_interval: 5s

# System status binary sensor
binary_sensor:
  - platform: status
    name: "${friendly_name} Status"
    entity_category: diagnostic
